# Vi Editter :
###############
dd   # cut this line
3d   # cut three lines
yy   # copy this line
3y   # copy three lines
p    # paste
x    # delete char
3x   # delte three chars
w    # word foreward
b    # word backward
0    # begin of a line
o    # down new line
u    # Ctrl+Z
G    # go to the last line at file
v    # select some text ,, lines... chars ...  then press "d" to cut , or "y" to copy , then press "p" to paste
y    # copy after select with "v"
d    # cut after select with "v"

# Like Arrows , right , left , down , up :
h ,j , k , l  


################################################################
rsync :
########
    --delete : delete files that don’t exist on sender (system)
    -v : Verbose (try -vv for more detailed information)
    -e "ssh options" : specify the ssh as remote shell
    -a : archive mode
    -r : recurse into directories
    -z : compress file data

rsync --exclude 'root/' --exclude 'private/'  -av  --delete  /vz/ /Backup_SAN/vz/ 2>&1

rsync -v -e ssh jerry@openbsd.nixcraft.in:~/webroot.txt /tmp


# Task: Synchronize a remote directory with a local directory
    $ rsync -r -a -v -e "ssh -l jerry" --delete QWE.com:/webroot/ /local/webroot 

# Task: Synchronize a local directory with a remote directory
    $ rsync -r -a -v -e "ssh -l jerry" --delete /local/webroot QWE.com:/webroot


################################################################
Scp :
######
# Copy the file "foobar.txt" from a remote host to the local host
    $ scp your_username@remotehost.edu:foobar.txt /some/local/directory 

# Copy the file "foobar.txt" from the local host to a remote host
    $ scp foobar.txt your_username@remotehost.edu:/some/remote/directory


# Copy the directory "foo" from the local host to a remote host's directory "bar"
    $ scp -r foo your_username@remotehost.edu:/some/remote/directory/bar 

# Copy the file "foobar.txt" from remote host "rh1.edu" to remote host "rh2.edu"
    $ scp your_username@rh1.edu:/some/remote/directory/foobar.txt \
    your_username@rh2.edu:/some/remote/directory/ 

# Copying the files "foo.txt" and "bar.txt" from the local host to your home directory on the remote host
    $ scp foo.txt bar.txt your_username@remotehost.edu:~ 

# Copy the file "foobar.txt" from the local host to a remote host using port 2264
    $ scp -P 2264 foobar.txt your_username@remotehost.edu:/some/remote/directory 

################################################################
# Clear Ram memory cache :
   # 1. Clear PageCache only.
sync; echo 1 > /proc/sys/vm/drop_caches

   # 2. Clear dentries and inodes.
sync; echo 2 > /proc/sys/vm/drop_caches

   # 3. Clear PageCache, dentries and inodes.
sync; echo 3 > /proc/sys/vm/drop_caches 
 
   # Clear Ram & Swap :
echo 3 > /proc/sys/vm/drop_caches && swapoff -a && swapon -a && printf '\n%s\n' 'Ram-cache and Swap Cleared'

################################################################
# Systemd :
   # Analyze the Boot Process :
   # to view information about the startup process in general, run this command:
systemd-analyze
   
   # To view how long each process took to start, run this command: 
systemd-analyze blame

   # To view all available unit files on your system:
systemctl list-unit-files

   # To list all running units:
systemctl list-units

   # To list all failed units:
systemctl –failed

  
# Manage Services :
####################

   # To view a list of enabled and disabled services :
systemctl list-unit-files –type=service

    systemctl start name.service
    systemctl stop name.service
    systemctl restart name.service
    systemctl reload name.service
    systemctl status name.service  	

    systemctl enable name.service
    systemctl disable name.service


    # You can “mask” a service or other unit to prevent it from starting up at all. 
    # You’ll need to unmask it before it can start in the future:
systemctl mask name.service
systemctl unmask name.service



################################################################
# copy non-empty directory :
cp -r dire /path

# move non-empty directory :
mv dir /path



cp -n   # copy without override 
cp -i   # ask before override


postqueue -f                             # redial with messages , manupilate them


  # send public key to another server :
  # enable "PermitRootLogin yes" at the server which you want to ssh to , then :
cat ~/.ssh/id_rsa.pub | ssh user@hostname 'cat >> .ssh/authorized_keys'  
  # thats mean copy your public key to that server , put it at /root/.ssh/authorized_key  



  # Import Database via terminal :
mysql -u username -p databasename < filename.sql    


  # cat file inside with expressions :
cat -Etv file              


  # Get public ip address in terminal :
wget http://ipinfo.io/ip -qO -


  # lsof command that display processes and what files they use
lsof 

  # Display process that use something like folder or file :
lsof 2>/dev/null | grep its_name
